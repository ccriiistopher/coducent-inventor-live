{"pageProps":{"extensions":[{"name":"Background","path":"background","description":"Creates a background for widgets. The properties are used to create the style of the widgets. The methods are used when the widgets have already been created.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"Build","description":"Returns a new set of properties configured to set only the color.","params":[{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetColor","description":"Changes the background color of the widget.","params":[{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetTintColor","description":"Applies a color to the background.\n**Info:**\n>Unlike the SetColor method, this one will apply a color over the entire background, including the edges.","params":[{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetColors","description":"Changes the background colors.\n**Info:**\n>Like the Colors property, it needs a list of Text (HTML Colors) or Colors.","params":[{"name":"colors","type":"List"}]},{"name":"SetStroke","description":"Changes the borders of the background.","params":[{"name":"width","type":"Number"},{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetFileSource","description":"Changes the background image.\n**Info:**\n>Unlike the corresponding property, this method does accept URLs.","params":[{"name":"src","type":"Text"}]}],"properties":[{"name":"Color","description":"Sets the background color.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text,Color"}]},{"name":"Colors","description":"Sets the background colors.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>This property sets a gradient as the background.\n>The items in the list are colors, Text and Colors are supported.","params":[{"name":"*","type":"List"}]},{"name":"BorderWidth","description":"Sets the thickness of the background edges.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"RippleColor","description":"Sets the color of the wave that is activated when the widget is pressed.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>For the wave effect to show, the widget needs to be clickable.","params":[{"name":"*","type":"Text,Color"}]},{"name":"BorderColor","description":"Sets the color of the background borders.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text,Color"}]},{"name":"BorderRadius","description":"Sets the radius of the corners of the bottom.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"GradientDirection","description":"Sets the direction of the gradient.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The values ​​are obtained from the property blocks.","params":[{"name":"*","type":"GradientDirection"}]},{"name":"FileSource","description":"Sets the image to be displayed in the background.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The text should be a path to a file or the name of a file found in the assets of the project.\n>If this block is used, all other properties will be ignored to only display the image.\n>Supports NinePatch images.","params":[{"name":"*","type":"Text"}]},{"name":"TopToBottom","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"BottomToTop","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"LeftToRight","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"RightToLeft","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"BottomLeftTopRight","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"BottomRightTopLeft","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"TopLeftBottomRight","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]},{"name":"TopRightBottomLeft","description":"Gradient Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"GradientDirection"}]}],"shortDescription":"","group":"fancy-recyclerview-widgets"},{"name":"Fancy RecyclerView 2","path":"fancy-recyclerview-2","description":"Based on the Android RecyclerView widget. This extension adds many functionalities of the RecyclerView for Kodular.","date":"December 6, 2021 4:46 PM","events":[{"name":"OnWidgetClicked","description":"Event generated when any widget is clicked.For this event to be fired by a widget, it must have the respective property,\"Clickable\".","params":[{"name":"position","type":"Number"},{"name":"widgetName","type":"Text"},{"name":"group","type":"Group"}]},{"name":"OnWidgetLongClicked","description":"Event generated when any widget is long clicked.For this event to be fired by a widget, it must have the respective property,\"Clickable\".","params":[{"name":"position","type":"Number"},{"name":"widgetName","type":"Text"},{"name":"group","type":"Group"}]},{"name":"OnBindingRequest","description":"Event launched when a group changes its position and needs to update its widgets.","params":[{"name":"position","type":"Number"},{"name":"listItem","type":"Any"},{"name":"group","type":"Group"},{"name":"viewType","type":"Number"}]},{"name":"OnBindingCustomView","description":"Event fired when the custom widget that is optionally configured in the RecyclerView is visible on the screen or needs to be updated."},{"name":"FastScrolled","description":"Event launched when the \"Listenable Scroll\" method finished and the group being navigated to is already visible on the screen.","params":[{"name":"position","type":"Number"}]},{"name":"ItemSwiped","description":"Event launched when a group triggers a swipe action.Indicates whether the action corresponds to the right or left side.","params":[{"name":"position","type":"Number"},{"name":"left","type":"Boolean"},{"name":"right","type":"Boolean"}]},{"name":"MultiSelectionOptionSelected","description":"Event triggered when an option is selected in multiple selection mode.","params":[{"name":"title","type":"Text"},{"name":"selectedItems","type":"List"}]}],"methods":[{"name":"AddSelectionIconOption","description":"Adds options with icons to the multi-selection bar.\n**Info:**\n>These options will be added to the selection bar.\n>The icon is the name of a file in assets or the path to an image file.","params":[{"name":"title","type":"Text"},{"name":"icon","type":"Text"}]},{"name":"AddSelectionOption","description":"Adds options to the multi-selection bar.\n**Info:**\n>An option to select all items can be set with the SelectAllTitle property.","params":[{"name":"title","type":"Text"}]},{"name":"Build","description":"Finishes with the recyclerview configuration and adds it inside the specified component.\n**Info:**\n>It is preferable not to add it inside a Scroll Arrangement, but it can be added inside a Swipe Refresh Layout or other arrangement.","params":[{"name":"component","type":"Component"},{"name":"data","type":"List"}]},{"name":"GetCurrentScrollPixels","description":"Returns the offset position the recyclerview is currently in, the value is returned in pixels."},{"name":"GetGroupForPosition","description":"Returns the group corresponding to an adapter position (linked to the number of items in the data list). It will only return a valid position if the corresponding group is visible on the screen.\n**Info:**\n>It should be used when we are sure that the item corresponding to the position is visible on the screen, for example after using the ListenableScroll method.","params":[{"name":"position","type":"Number"}]},{"name":"GetLastSyncedWidget","description":"Returns the last widget synced with the RecyclerView.\n**Info:**\n>The returned widget cannot be edited with the Kodular blocks, but it does allow it to be used with extensions such as the Widget Animator or widget Screenshot."},{"name":"GetRootName","description":"Returns a name that is used to identify the first widget to be added to the RecyclerView model.\n**Info:**\n>This block tells the RecyclerView that it is starting to create the model."},{"name":"GetScrollRangePixels","description":"Returns the maximum scroll position of the RecyclerView. It is returned in pixels."},{"name":"ListenableScrollTo","description":"Causes the RecyclerView to go to a certain position and calls the FastScroll event when it is done scrolling.","params":[{"name":"position","type":"Number"}]},{"name":"NotifyDataSetChanged","description":"Notifies the recyclerview that a change occurred in the data list, because of this, it will have to update the widgets."},{"name":"ScrollTo","description":"Causes the RecyclerView to scroll to the specified position. It does not notify when it is done.","params":[{"name":"position","type":"Number"}]},{"name":"SetCustomView","description":"Sets the component that will be displayed among the RecyclerView items.","params":[{"name":"component","type":"Component"}]},{"name":"SetGridManager","description":"Sets the layout manager to Grid, so that the items in the RecyclerView will be displayed with columns or rows, depending on the orientation.","params":[{"name":"spanCount","type":"Number"},{"name":"reverse","type":"Boolean"},{"name":"portrait","type":"Boolean"}]},{"name":"SetListManager","description":"Sets the layout manager to List, so the items in the RecyclerView will be listed horizontally or vertically depending on the orientation.","params":[{"name":"reverse","type":"Boolean"},{"name":"startFromBottom","type":"Boolean"},{"name":"portrait","type":"Boolean"}]},{"name":"SetScrollListener","description":"It establishes the procedure that is responsible for listening to the changes of state when scrolling in the RecyclerView.\n**Info:**\n>The addresses are automatically detected depending on the layout manager.\n>In a horizontal manager the procedure should have the following parameters: [canScrollToLeft, canScrollToRight, isIddle]\n>In a vertical manager they should be: [canScrollToTop, canScrollToBottom, isIddle]\n>The isIddle parameter refers to whether the RecyclerView is idle.","params":[{"name":"procedure","type":"Text"}]},{"name":"SetStaggeredGridManager","description":"Sets the layout manager as a staggered grid. It will be displayed in columns or rows depending on the orientation.","params":[{"name":"spanCount","type":"Number"},{"name":"reverse","type":"Boolean"},{"name":"portrait","type":"Boolean"}]},{"name":"SetSwipeForViewTypes","description":"It establishes in which direction or in which directions each type of view can be scrolled.\n**Info:**\n>The letters l, r, and b are used to indicate the left, right, and both sides respectively.\n>Rules structure:\n[view-type]:[side]\nExample:\"4: l, 5: r, 6: b\"","params":[{"name":"types","type":"Text"}]},{"name":"SetViewTypeProvider","description":"It establishes the procedure that is in charge of returning the type of view according to the position that the RecyclerView returns.\n**Info:**\n>The procedure must have the parameters [position, listItem]\n>It must return a type of view, it must be one created previously.","params":[{"name":"procedure","type":"Text"}]},{"name":"SmoothScrollTo","description":"Causes the RecyclerView to scroll smoothly to a specific position.\n**Info:**\n>It does not notify any event if it finished with its task.","params":[{"name":"position","type":"Number"}]},{"name":"Sync","description":"It is mainly used when configuring the RecyclerView for the first time, it tells all the components that depend on it that this RecyclerView is currently being worked on."},{"name":"SyncWidget","description":"Synchronizes a widget with the RecyclerView. It is mainly used to edit the widgets.","params":[{"name":"name","type":"Text"},{"name":"group","type":"Group"}]},{"name":"SyncWithViewType","description":"Synchronizes the RecyclerView and also introduce a new type of view in it.","params":[{"name":"viewType","type":"Number"}]},{"name":"UpdateData","description":"Changes the data list bound to the RecyclerView, notifies you that it should be redrawn according to the new list.","params":[{"name":"list","type":"List"}]},{"name":"UpdateVisibleItem","description":"Notifies the RecyclerView that it has to redraw an item regardless of whether the linked list underwent a change.","params":[{"name":"position","type":"Number"}]}],"properties":[{"name":"DividerColor","description":"Sets the color of the division between the groups.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Color"}],"defValue":"#FFC107"},{"name":"DividerSize","description":"Sets the height/width of the division between the groups.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"CustomView","description":"Sets whether the RecyclerView will show a component among its groups.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"CustomViewItemsOffset","description":"Sets the number of items to be displayed before displaying the set component.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MultiSelection","description":"Sets whether multi-selection is enabled.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"MultiSelectionSuffix","description":"Sets the text that will be displayed after the number of items selected in the selection bar.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Text"}],"defValue":" items"},{"name":"SelectAllTitle","description":"Sets the title of the option button to make a selection of all items.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Text"}],"defValue":"SELECT ALL"},{"name":"MultiSelectionOpacity","description":"Sets the opacity of the group when it is selected.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>Values range from 0.0 to 1.0","params":[{"name":"*","type":"Number"}],"defValue":"0.5"},{"name":"MultiSelectionColor","description":"Sets the background color of the group when selected.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"SwipeActions","description":"Specifies whether swipe actions will be available to the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Boolean"}],"defValue":"False"},{"name":"SwipeDirection","description":"Specify the available sides to trigger swipe actions. \"Left, Right and Both\".\n**Block Types:** *Write*\n**Presentation:** *Designer*\n**Info:**\n>Sides can be specified for each view type with the \"SetSwipeForViewTypes\" method.","params":[{"name":"*","type":"Text"}],"defValue":"Left"},{"name":"SwipeThreshold","description":"The fraction that the user should move the group to be considered as swiped.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>Values range from 0.0 to 1.0\n>The fraction is calculated with respect to RecyclerView's bounds.","params":[{"name":"*","type":"Number"}],"defValue":"0.5"},{"name":"SwipeVelocityThreshold","description":"Defines the maximum velocity ItemTouchHelper will ever calculate for pointer movements.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>Values range from 0.0 to 1.0.\n>If you increase the value, it will be easier for the user to swipe diagonally and if you decrease the value, user will need to make a rather straight finger movement to trigger a swipe.","params":[{"name":"*","type":"Number"}],"defValue":"1.0"},{"name":"SwipeLeftSideColor","description":"Specifies the background color of the action on the left side.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"SwipeRightSideColor","description":"Specifies the background color of the action on the right side.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"SwipeLeftRevealColor","description":"Specifies the color of the wave that indicates that the action on the left side is considered to be launched.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"SwipeRightRevealColor","description":"Specifies the color of the wave that indicates that the action on the right side is considered to be launched.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"SwipeLeftSideIcon","description":"Specifies the image file name that the RecyclerView will display in the action on the left side.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>The file must be located in the assets of the project. Only the name plus the extension should be entered.\n>If the image is too large it will be resized.","params":[{"name":"*","type":"Asset"}]},{"name":"SwipeRightSideIcon","description":"Specifies the image file name that the RecyclerView will display in the action on the right side.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Asset"}]},{"name":"Visible","description":"Specifies RecyclerView visibility.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"FixedSize","description":"Specifies whether the RecyclerView will have a fixed size.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>If enabled, the size of the RecyclerView does not depend on its children. This means that it does not have to be constantly resized, thus preventing performance variations.","params":[{"name":"*","type":"Boolean"}]},{"name":"BackgroundColor","description":"Sets the background color of the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*","params":[{"name":"*","type":"Color"}],"defValue":"#000000"},{"name":"BackgroundAsset","description":"Sets the background image of the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>The file must be located in the assets of the project. Only the name plus the extension should be entered.","params":[{"name":"*","type":"Asset"}]},{"name":"Width","description":"Sets the width of the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>Allowed values are Automatic and FillParent\n>To specify a different size, change it in the component where the RecyclerView will be created.","params":[{"name":"*","type":"Text"}]},{"name":"Height","description":"Sets the height of the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer, Blocks*\n**Info:**\n>Allowed values are Automatic and FillParent\n>To specify a different size, change it in the component where the RecyclerView will be created.","params":[{"name":"*","type":"Text"}]}],"shortDescription":"Based on the Android RecyclerView widget. This extension adds many functionalities of the RecyclerView for Kodular.","group":"fancy-recyclerview-2-group"},{"name":"LinearMetrics","path":"linear-metrics","description":"It allows to model an object that specifies the measurements for widgets whose parents are ZLinear Widgets.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetBuildInMetrics","description":"Changes the measurements configured in the widget.","params":[{"name":"width","type":"Number"},{"name":"height","type":"Number"},{"name":"weight","type":"Number"}]}],"properties":[{"name":"MarginLeft","description":"Specifies the extra space on the left side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginRight","description":"Specifies the extra space on the right side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginTop","description":"Specifies the extra space on the top side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginBottom","description":"Specifies the extra space on the bottom side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Margin","description":"Specifies the extra space for all sides of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>It should be used when all the extra spaces should be the same.\n>Replaces all independent margin values.","params":[{"name":"*","type":"Number"}]},{"name":"Width","description":"Specifies the width of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Height","description":"Specifies the height of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"ForceSpace","description":"Specifies whether the widget should forcibly occupy a space in its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>It can be used when all widgets need to occupy the same space or share space equally regardless of their width or height.","params":[{"name":"*","type":"Boolean"}]},{"name":"FillParent","description":"A value that specifies that the widget will occupy all the space in its parent widget.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"FillAutomatic","description":"A value that specifies that the widget will occupy only the space that it needs.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"Snap","path":"snap","description":"This extension helps to establish a behavior similar to the ViewPager in the RecyclerView.","date":"January 11, 2022 3:01 AM","events":[{"name":"PositionChange","description":"Event called when the group that is in focus changes, returns its position.","params":[{"name":"position","type":"Number"}]}],"methods":[{"name":"SnapIn","description":"This method connects the snap extension with the specified RecyclerView.","params":[{"name":"recycler","type":"RecyclerView"}]},{"name":"SnapOut","description":"Detaches the extension from any RecyclerView that it is linked to."}],"properties":[{"name":"AnimationScaleSize","description":"Specifies the size to which groups that are not in focus are scaled.\n**Block Types:** *Write*\n**Presentation:** *Designer*\n**Info:**\n>Values from 0.0 to 1.0(normal size)","params":[{"name":"*","type":"Number"}],"defValue":"0.85"},{"name":"FirsItemOffset","description":"Specifies the extra space to add to the beginning and end of the RecyclerView.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Number"}]},{"name":"LinearSnap","description":"Determines the behavior of the swipe, when LinearSnap is on it will center the focused element. When disabled, the behavior will be similar to the ViewPager.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Boolean"}],"defValue":"False"},{"name":"ScaleAnimation","description":"Specifies whether the scaling effect will be activated in the groups each time the focus group changes.\n**Block Types:** *Write*\n**Presentation:** *Designer*","params":[{"name":"*","type":"Boolean"}],"defValue":"False"}],"shortDescription":"","group":null},{"name":"StackMetrics","path":"stack-metrics","description":"It allows to model an object that specifies the measurements for widgets whose parents are ZStack Widgets.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]}],"properties":[{"name":"AlignParentTop","description":"Specifies whether the widget will be positioned relative to the top area of ​​its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"AlignParentBottom","description":"Specifies whether the widget will be positioned relative to the bottom area of its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"AlignParentLeft","description":"Specifies whether the widget will be positioned relative to the left area of its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"AlignParentRight","description":"Specifies whether the widget will be positioned relative to the right area of its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"AlignParentStart","description":"Specifies whether the widget will be positioned relative to the start(left top) of its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"AlignParentEnd","description":"Specifies whether the widget will be positioned relative to the end(right bottom) of its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"CenterInParent","description":"Specifies whether the widget should be centered on its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"ToLeftOf","description":"The widget will be positioned relatively to the left side of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"ToRightOf","description":"The widget will be positioned relatively to the right side of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"Above","description":"The widget will be positioned relatively to the top side of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"Below","description":"The widget will be positioned relatively to the bottom side of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"CenterHorizontal","description":"The widget will be centered horizontally on its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"CenterVertical","description":"The widget will be centered vertically on its parent widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"ToStartOf","description":"The widget will be positioned relatively to the start(top left) of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"ToEndOf","description":"The widget will be positioned relatively to the end of the indicated widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"MarginLeft","description":"Specifies the extra space on the left side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginRight","description":"Specifies the extra space on the right side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginTop","description":"Specifies the extra space on the top side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MarginBottom","description":"Specifies the extra space on the bottom side of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Margin","description":"Specifies the extra space for all sides of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>It should be used when all the extra spaces should be the same.\n>Replaces all independent margin values.","params":[{"name":"*","type":"Number"}]},{"name":"Width","description":"Specifies the width of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Height","description":"Specifies the height of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"FillParent","description":"A value that specifies that the widget will occupy all the space in its parent widget.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"FillAutomatic","description":"A value that specifies that the widget will occupy only the space that it needs.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZAnimator","path":"zanimator","description":"This extension allows animating components and widgets (RecyclerView Widgets).","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"AnimateRecyclerWidget","description":"This method applies an animation on a widget of the RecyclerView. Duration and delay are in milliseconds.","params":[{"name":"technique","type":"Technique"},{"name":"duration","type":"Number"},{"name":"delay","type":"Number"},{"name":"widget","type":"Widget"}]},{"name":"AnimateComponent","description":"This method applies an animation on a component. Duration and delay are in milliseconds.","params":[{"name":"technique","type":"Technique"},{"name":"duration","type":"Number"},{"name":"delay","type":"Number"},{"name":"component","type":"Component"}]}],"properties":[{"name":"Flash","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Pulse","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RubberBand","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Shake","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Swing","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Wobble","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Bounce","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Tada","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"StandUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"Wave","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RollIn","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RollOut","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"BounceIn","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"BounceInDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"BounceInLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"BounceInRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"BounceInUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeIn","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeInUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeInDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeInLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeInRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeOut","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeOutDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeOutLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeOutRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FadeOutUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FlipInX","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FlipOutX","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"FlipOutY","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateIn","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateInDownLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateInDownRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateInUpLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateInUpRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateOut","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateOutDownLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateOutDownRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateOutUpLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"RotateOutUpRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideInLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideInRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideInUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideInDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideOutLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideOutRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideOutUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"SlideOutDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomIn","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomInDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomInLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomInRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomInUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomOut","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomOutDown","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomOutLeft","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomOutRight","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]},{"name":"ZoomOutUp","description":"Animation Technique\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Technique"}]}],"shortDescription":"","group":null},{"name":"ZButton","path":"zbutton","description":"It allows to model a new button widget model.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new ZButton model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetText","description":"Changes the text of the ZButton widget.","params":[{"name":"text","type":"Text"}]}],"properties":[{"name":"TrailingImage","description":"Specifies the image to be displayed at the start of the button.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"LeadingImage","description":"Specifies the image to be displayed at the end of the button.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Label","description":"Specifies the button text.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>To edit the style of the text you have to place a set of properties exported by the ZLabel object.","params":[{"name":"*","type":"Text,PropertySet"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZCard","path":"zcard","description":"It allows to model a new card widget model.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new Card widget model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetRadius","description":"Changes the radius of the corners of the card widget.","params":[{"name":"radius","type":"Number"}]},{"name":"SetBackgroundColor","description":"Changes the background color of the card.","params":[{"name":"color","type":"Color"},{"name":"color","type":"Text"}]},{"name":"SetCardElevation","description":"Changes the elevation of the card.","params":[{"name":"elevation","type":"Number"}]}],"properties":[{"name":"Radius","description":"Specifies the radius of the corners of the card.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>If you only want to change the color of the card, it is preferable to use the BackgroundColor.\n>It does not maintain the radius of the corners of the card.","params":[{"name":"*","type":"PropertySet"}]},{"name":"BackgroundColor","description":"Specifies the background color of the card.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Maintains the radius of the edges of the card.","params":[{"name":"*","type":"Text,Color"}]},{"name":"CardElevation","description":"Specifies the elevation of the card.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The card displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the card must have a non-transparent background color.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZImage","path":"zimage","description":"It allows to model a new image widget model.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new ZImage model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetSource","description":"Loads the image into the widget.\n**Info:**\n>The image can be loaded from urls, it also supports images in the assets folder or in the storage.","params":[{"name":"src","type":"Text"}]},{"name":"SetColorFilter","description":"Changes the filter applied to the image.","params":[{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetScaleType","description":"Changes the type of image scaling.\n**Info:**\n>It does not apply instantly, that is, it is needed to load another image to see the results.","params":[{"name":"type","type":"ScaleType"}]},{"name":"SetScaleRatio","description":"Change the scaling size of the image.\n**Info:**\n>It does not apply instantly, that is, it is needed to load another image to see the results.\n>The range is from 0.1 (image is reduced to 10%) to 1.0 (100% image size)","params":[{"name":"ratio","type":"Number"}]}],"properties":[{"name":"Source","description":"Specifies the source of the image to load when the widget is created.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"ColorFilter","description":"Specifies the filter that will be applied on the images that are loaded in the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text,Color"}]},{"name":"ScaleType","description":"Specifies the type of image scaling.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"ScaleType"}]},{"name":"ScaleRatio","description":"Specifies the scaling size of the image.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The range is from 0.0 to 1.0, for example with 0.1 the size is reduced to 10% while with 1.0 100% of the size is preserved.","params":[{"name":"*","type":"Number"}],"defValue":"1.0"},{"name":"Placeholder","description":"Specifies an image that is displayed while the actual image is loading.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>It is preferable that the image is in the assets of the project.\n>Supports GIF format.","params":[{"name":"*","type":"Text"}]},{"name":"ImageRadius","description":"Specifies the radius of the image.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget is not cropped, the image to be loaded is cropped.","params":[{"name":"*","type":"Number"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]},{"name":"CenterCrop","description":"Returns the type of scaling.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"ScaleType"}]},{"name":"CenterInside","description":"Returns the type of scaling.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"ScaleType"}]},{"name":"Fit","description":"Returns the type of scaling.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"ScaleType"}]}],"shortDescription":"","group":null},{"name":"ZLabel","path":"zlabel","description":"It allows to model a new label widget model.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new ZLabel model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetFontTypeface","description":"Changes the font of the widget.\n**Info:**\n>Using this method instead of defining the font in the widget model may cause significant performance losses.","params":[{"name":"asset","type":"Text"}]},{"name":"SetFontSize","description":"Changes the font size of the widget.","params":[{"name":"size","type":"Number"}]},{"name":"SetMaxLines","description":"This method changes the maximum number of lines that the widget will have.","params":[{"name":"max","type":"Number"}]},{"name":"SetMinLines","description":"This method changes the minimum number of lines that the widget will have.","params":[{"name":"min","type":"Number"}]},{"name":"SetJustify","description":"This method changes the justification of the widget text.","params":[{"name":"enabled","type":"Boolean"}]},{"name":"SetTextAlign","description":"This method changes the alignment of the text.","params":[{"name":"alignment","type":"Number"}]},{"name":"SetTextColor","description":"This method changes the color of the text.","params":[{"name":"color","type":"Text"},{"name":"color","type":"Color"}]},{"name":"SetMarquee","description":"Changes the state of the widget's moving text.","params":[{"name":"enabled","type":"Boolean"}]},{"name":"SetText","description":"Changes the text of the widget.","params":[{"name":"text","type":"Text"}]}],"properties":[{"name":"FontTypeface","description":"Specifies the font of the text.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"FontSize","description":"Specifies the size of the text.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Bold","description":"Specifies whether the text will be bold.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Italic","description":"Specifies whether the text will be italic.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"MaxLines","description":"Specifies the maximum lines of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MinLines","description":"Specifies the minimum lines of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Justify","description":"Specifies whether the text will be justified.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"TextAlign","description":"Specifies the alignment of the text.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"TextColor","description":"Specifies the color of the text.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Color,Text"}]},{"name":"Marquee","description":"Specifies whether the text will be in motion.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>For the text to move, it has to exceed the size of the widget.","params":[{"name":"*","type":"Boolean"}]},{"name":"Text","description":"Specifies the default text for the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>If the text will not change there is no reason to use the SetText method.","params":[{"name":"*","type":"Text"}]},{"name":"MaxWidth","description":"Specifies the maximum width that the widget can reach.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"MaxHeight","description":"Specifies the maximum height that the widget can reach.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"HtmlSupport","description":"Specifies whether the widget should handle the text in HTML format.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]},{"name":"AlignStart","description":"Text Alignment\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"AlignEnd","description":"Text Alignment\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"AlignCenter","description":"Text Alignment\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZLinear","path":"zlinear","description":"It allows to model a new linear widget model.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new ZLinear model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetHorizontalGravity","description":"This method changes the horizontal gravity of the widget.","params":[{"name":"gravity","type":"Number"}]},{"name":"SetVerticalGravity","description":"This method changes the vertical gravity of the widget.","params":[{"name":"gravity","type":"Number"}]},{"name":"SetDirection","description":"This method changes the direction of the widget.","params":[{"name":"direction","type":"Number"}]}],"properties":[{"name":"Direction","description":"Specifies the direction of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"HorizontalGravity","description":"Specifies the horizontal gravity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"VerticalGravity","description":"SSpecifies the vertical gravity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]},{"name":"GravityStart","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"GravityEnd","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"GravityCenter","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"DirectionHorizontal","description":"Linear Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"DirectionVertical","description":"Linear Direction.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZLottie","path":"zlottie","description":"It allows to model a new lottie widget model.","date":"January 11, 2022 3:01 AM","events":[{"name":"AnimationEnd","description":"Event called by widgets when their animation ends.","params":[{"name":"name","type":"Text"},{"name":"group","type":"Group"},{"name":"position","type":"Number"}]},{"name":"AnimationStart","description":"Event called by widgets when their animation starts.","params":[{"name":"name","type":"Text"},{"name":"group","type":"Group"},{"name":"position","type":"Number"}]},{"name":"AnimationRepeat","description":"Event called by widgets when their animation loops.","params":[{"name":"name","type":"Text"},{"name":"group","type":"Group"},{"name":"position","type":"Number"}]}],"methods":[{"name":"New","description":"Adds a new ZLottie model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"GetCurrentFrame","description":"Returns the frame that is being displayed.","params":[{"name":"*","type":"Number"}]},{"name":"GetFrameCount","description":"Returns the total number of frames.","params":[{"name":"*","type":"Number"}]},{"name":"IsAnimating","description":"Returns if the animation is playing.","params":[{"name":"*","type":"Boolean"}]},{"name":"PauseAnimation","description":"This method pauses the animation."},{"name":"ResumeAnimation","description":"This method resumes the animation."},{"name":"StartAnimation","description":"This method starts the animation."},{"name":"SetCurrentFrame","description":"Changes the current frame of the animation."},{"name":"StartFrame","description":"Changes the start frame of the animation.","params":[{"name":"frame","type":"Number"}]},{"name":"EndFrame","description":"Changes the end frame of the animation.","params":[{"name":"frame","type":"Number"}]},{"name":"SetSpeed","description":"Changes the speed of the animation.\n**Info:**\n>Normal speed is 1.0","params":[{"name":"speed","type":"Number"}]}],"properties":[{"name":"Source","description":"Specifies the animation file name.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Text"}]},{"name":"AnimationSpeed","description":"Specifies the speed of the animation.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}],"defValue":"1.0"},{"name":"LoopAnimation","description":"Specifies whether the animation will play in an infinite loop.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"StartFrame","description":"Specifies the start frame for the animation.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"EndFrame","description":"Specifies the end frame for the animation.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":null},{"name":"ZStack","path":"zstack","description":"It allows to model a new stack widget model. Based on the Android RelativeLayout widget.","date":"December 6, 2021 4:47 PM","events":[],"methods":[{"name":"New","description":"Adds a new ZStack model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetHorizontalGravity","description":"This method changes the horizontal gravity of the widget.","params":[{"name":"gravity","type":"Number"}]},{"name":"SetVerticalGravity","description":"This method changes the vertical gravity of the widget.","params":[{"name":"gravity","type":"Number"}]}],"properties":[{"name":"HorizontalGravity","description":"Specifies the horizontal gravity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"VerticalGravity","description":"SSpecifies the vertical gravity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]},{"name":"GravityStart","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"GravityEnd","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"GravityCenter","description":"Linear Gravity.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"It allows to model a new stack widget model. Based on the Android RelativeLayout widget.","group":"fancy-recyclerview-2-group"},{"name":"ZView","path":"zview","description":"It allows to model a new widget model. The methods in this component can be applied in any widget.","date":"January 11, 2022 3:01 AM","events":[],"methods":[{"name":"New","description":"Adds a new ZView model to the model layout of the RecyclerView which is synced.","params":[{"name":"name","type":"Text"},{"name":"parent","type":"Text"},{"name":"props","type":"PropertySet"}]},{"name":"BuildProps","description":"Returns a new property set containing the previously defined properties.","params":[{"name":"*","type":"PropertySet"}]},{"name":"DefaultProps","description":"Returns an empty property set.","params":[{"name":"*","type":"PropertySet"}]},{"name":"SetElevation","description":"Changes the elevation of the widget.","params":[{"name":"elevation","type":"Number"}]},{"name":"SetPaddingLeft","description":"This method changes the left padding of the widget.","params":[{"name":"paddingLeft","type":"Number"}]},{"name":"SetPaddingTop","description":"This method changes the top padding of the widget.","params":[{"name":"paddingTop","type":"Number"}]},{"name":"SetPaddingRight","description":"This method changes the right padding of the widget.","params":[{"name":"paddingRight","type":"Number"}]},{"name":"SetPaddingBottom","description":"This method changes the bottom padding of the widget.","params":[{"name":"paddingBottom","type":"Number"}]},{"name":"SetPadding","description":"This method changes the padding of the widget.","params":[{"name":"padding","type":"Number"}]},{"name":"SetEnabled","description":"This method sets the widget as enabled or disabled.","params":[{"name":"enabled","type":"Boolean"}]},{"name":"SetVisible","description":"This method changes the visibility of the widget.","params":[{"name":"visibility","type":"Number"}]},{"name":"SetClickable","description":"This method changes if the widget responds to click events.","params":[{"name":"clickable","type":"Boolean"}]},{"name":"SetLongClickable","description":"This method changes if the widget responds to long click events.","params":[{"name":"longClickable","type":"Boolean"}]},{"name":"SetAlpha","description":"This method changes the opacity of the widget.","params":[{"name":"alpha","type":"Number"}]}],"properties":[{"name":"Background","description":"Specifies the background of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"Elevation","description":"Specifies the elevation of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>The widget displays a shadow according to its elevation.\n>In order for the shadow to be displayed, the widget must have a non-transparent background.","params":[{"name":"*","type":"Number"}]},{"name":"LayoutMetrics","description":"Specifies the set of properties that the parent of the widget will take to create the widget's measures.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"PropertySet"}]},{"name":"PaddingLeft","description":"Specifies the space between the left edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingRight","description":"Specifies the space between the right edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingTop","description":"Specifies the space between the top edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"PaddingBottom","description":"Specifies the space between the bottom edge and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Padding","description":"Specifies the space between the edges and the content of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Enabled","description":"Specifies whether the widget is enabled.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Visible","description":"Specifies whether the widget is visible (true) or invisible (false).\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Being invisible, it does not occupy any space.","params":[{"name":"*","type":"Boolean"}]},{"name":"Clickable","description":"Specifies whether the widget can be clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"LongClickable","description":"Specifies if the widget can be long clicked.\n**Block Types:** *Write*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Boolean"}]},{"name":"Alpha","description":"Specifies the opacity of the widget.\n**Block Types:** *Write*\n**Presentation:** *Blocks*\n**Info:**\n>Range from 0.0 (0% visible) to 1.0 (100% visible)","params":[{"name":"*","type":"Number"}]},{"name":"Visible*","description":"Widget visibility.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Invisible","description":"Widget visibility.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]},{"name":"Gone","description":"Widget visibility.\n**Block Types:** *Read*\n**Presentation:** *Blocks*","params":[{"name":"*","type":"Number"}]}],"shortDescription":"","group":"fancy-recyclerview-2-group"}],"groups":{"fancy-recyclerview-2-group":[{"title":"Fancy RecyclerView 2 - Group","path":"fancy-recyclerview-2-group","description":"Based on the Android RecyclerView widget. This extension adds many functionalities of the RecyclerView for Kodular.","platforms":["Kodular","AppInventor","Niotron"],"media":["img/1.png","img/2.png","img/3.png","img/4.png","img/5.png","img/6.png"],"price":25,"paypalLink":null,"downloadLink":null,"parent":null,"tagColor":"#1890ff","icon":null}],"fancy-recyclerview-widgets":[{"title":"Fancy RecyclerView Widgets","path":"fancy-recyclerview-widgets","description":"Widgets for Fancy RecyclerView Extension","platforms":[],"media":null,"price":null,"paypalLink":null,"downloadLink":null,"parent":"fancy-recyclerview-2-group","tagColor":"#1890ff","icon":null}]}},"__N_SSG":true}